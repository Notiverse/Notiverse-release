# .github/workflows/build-from-private.yml
name: Build Signed APK and Release

on:
  push:
    tags:
      - 'v*' # triggers on version tags like v1.0.0

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4


      - name: Clone private Flutter app repo
        env:
          TOKEN: ${{ secrets.SECRET_PAT }}
        run: |
          git clone --recursive https://x-access-token:${TOKEN}@github.com/Notiverse/notiverse_app.git app
          cd app
          git checkout production

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'

      - name: Install dependencies
        run: |
          cd app
          flutter pub get

      - name: Decode keystore from base64
        run: |
          mkdir -p app/android/app
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > app/android/app/my-release-key.jks

      - name: Create key.properties file
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > app/android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> app/android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> app/android/key.properties
          echo "storeFile=my-release-key.jks" >> app/android/key.properties

      - name: Build signed APK
        run: |
          cd app
          bash scripts/build.sh apk

      - name: Rename APK to include version
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          APK_NAME="Notiverse-${TAG_NAME}.apk"
          mv app/build/app/outputs/flutter-apk/app-prod-release.apk "app/build/app/outputs/flutter-apk/${APK_NAME}"

      - name: Update latest.json
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          APK_NAME="Notiverse-${TAG_NAME}.apk"
          APK_PATH="app/build/app/outputs/flutter-apk/${APK_NAME}"

          # Remove 'v' prefix from version for latest.json
          VERSION=${TAG_NAME#v}
          
          # Get SHA256 hash
          SHA256=$(sha256sum "$APK_PATH" | awk '{ print $1 }')
          
          # Get APK file size in MB (rounded to 2 decimal places)
          SIZE_BYTES=$(stat -c%s "$APK_PATH")
          SIZE_MB=$(echo "scale=2; $SIZE_BYTES/1048576" | bc)
          
          # Get current date in ISO format
          RELEASE_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

          ALIAS="${{ secrets.KEY_ALIAS }}"
          STOREPASS="${{ secrets.KEYSTORE_PASSWORD }}"
          KEY_FINGERPRINT=$(keytool -list -v -keystore app/android/my-release-key.jks -alias "$ALIAS" -storepass "$STOREPASS" | grep "SHA256:" | cut -d ":" -f 2- | xargs)
    
          
          # Create JSON with all attributes
          cat > latest.json << EOF
          {
            "version": "${VERSION}",
            "url": "https://github.com/${{ github.repository }}/releases/download/${TAG_NAME}/${APK_NAME}",
            "sha256": "${SHA256}",
            "size": "${SIZE_MB}MB",
            "releaseDate": "${RELEASE_DATE}",
            "keyFingerprint": "${KEY_FINGERPRINT}"
          }
          EOF

      - name: Commit latest.json
        env:
          TOKEN: ${{ secrets.SECRET_PAT }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

          # Save the generated latest.json
          cp latest.json /tmp/latest.json
          
          # Checkout the main branch (change 'main' to 'master' if needed)
          git fetch origin main
          git checkout main
          
          # Restore the latest.json
          cp /tmp/latest.json latest.json
          
          # Commit and push
          git add latest.json
          git commit -m "Update latest.json for ${TAG_NAME}"
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git main

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: app/build/app/outputs/flutter-apk/Notiverse-*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.SECRET_PAT }}
